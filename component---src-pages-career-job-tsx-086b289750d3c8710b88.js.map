{"version":3,"file":"component---src-pages-career-job-tsx-086b289750d3c8710b88.js","mappings":"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","sources":["webpack://ipf-homepage-new/./src/api/getJobsData.tsx","webpack://ipf-homepage-new/./src/components/Header.tsx","webpack://ipf-homepage-new/./src/pages/career/job.tsx"],"sourcesContent":["export async function getAllJobs(signal: AbortSignal) {\n  return fetch(`https://culture.iportfolio.co.kr/api/homepage/career`, {\n    signal: signal,\n  })\n    .then((response) => response.json())\n    .catch((error) => {\n      if (error.name !== 'AbortError') {\n        console.log('request failed', error);\n      } else {\n        console.log('request cancelled', error);\n      }\n    });\n}\n\nexport async function getJobDetail(details: string, signal: AbortSignal) {\n  return fetch(`https://culture.iportfolio.co.kr/api/doc/${details}`, {\n    signal: signal,\n  })\n    .then((response) => response.json())\n    .catch((error) => {\n      if (error.name !== 'AbortError') {\n        console.log('request failed', error);\n      } else {\n        console.log('request cancelled', error);\n      }\n    });\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { responsive } from '../layouts/responsive';\nimport colors from '../layouts/colors';\nimport Typography from '../layouts/Typography';\n\nimport Navigation from '../containers/Navigation';\n\ntype Props = {\n  children: string;\n};\n\nconst HeaderContainer = styled.header`\n  width: 100%;\n  height: 235px;\n\n  color: white;\n  background-color: ${colors.black};\n\n  @media ${responsive.conditionForTablet} {\n    height: 32.6rem;\n  }\n`;\n\nconst Title = styled.h1`\n  position: relative;\n  top: calc(100% - 80px);\n  color: white;\n  padding-left: calc((100% - 32rem) / 2);\n\n  ${Typography('hero')};\n  font-family: 'Roboto', sans-serif;\n\n  @media ${responsive.conditionForTablet} {\n    padding-left: calc((100% - 70.4rem) / 2);\n  }\n\n  @media ${responsive.conditionForDesktop} {\n    padding-left: calc((100% - 96rem) / 2);\n  }\n`;\n\nfunction Header({ children }: Props) {\n  return (\n    <HeaderContainer>\n      <Navigation mode=\"dark\" />\n      <Title>{children}</Title>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n","import { graphql } from 'gatsby';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Skeleton from 'react-loading-skeleton';\n\nimport Typography from '../../layouts/Typography';\nimport colors from '../../layouts/colors';\n\nimport { getAllJobs, getJobDetail } from '../../api/getJobsData';\n\nimport Header from '../../components/Header';\nimport HelmetComponent from '../../components/HelmetComponent';\nimport Container from '../../components/Container';\nimport Button from '../../components/Button';\nimport Footer from '../../containers/Footer';\nimport { JobItemDataType } from '../../components/JobItem';\n\ntype Props = {\n  location: any;\n};\n\ntype JobDetailType = {\n  docId: string;\n  headingId: string;\n  content: string;\n  title: string;\n  depth: number;\n};\n\nconst ContainerStyled = styled(Container)`\n  width: 100%;\n  flex-direction: column;\n\n  font-family: 'Spoqa Han Sans Neo', 'sans-serif';\n`;\n\nconst Heading1 = styled.h2`\n  ${Typography('heading1')};\n  color: ${colors.black};\n\n  margin-bottom: 1.6rem;\n  white-space: pre-line;\n\n  width: fit-content;\n`;\n\nconst Body1 = styled.h3`\n  ${Typography('body', 1.8, 700)};\n  color: ${colors.gray4};\n\n  white-space: pre-line;\n`;\n\nconst Heading2 = styled.h3`\n  ${Typography('heading2')};\n  color: ${colors.primary};\n\n  margin-bottom: 0.8rem;\n  margin-top: 6.4rem;\n\n  white-space: pre-line;\n`;\n\nconst Heading3 = styled.p`\n  ${Typography('body', 1.6, 700)};\n  color: ${colors.black};\n\n  margin-bottom: 0.8rem;\n  margin-top: 1.6rem;\n\n  white-space: pre-line;\n`;\n\nconst Heading4 = styled.li`\n  ${Typography('body', 1.4, 700)};\n  color: ${colors.black};\n\n  margin-bottom: 0.8rem;\n\n  white-space: pre-line;\n`;\n\nconst Body3 = styled.p`\n  ${Typography('body', 1.4, 400)};\n  color: ${colors.black};\n\n  white-space: pre-line;\n`;\n\nconst DiscList = styled.ul`\n  list-style: disc;\n  list-style-position: inside;\n  word-break: keep-all;\n\n  margin: 0;\n  white-space: pre-line;\n`;\n\nconst CircleList = styled.ul`\n  list-style: circle;\n  list-style-position: outside;\n  padding-left: 3.9rem;\n  word-break: keep-all;\n\n  margin-bottom: 0.8rem;\n  white-space: pre-line;\n`;\n\nconst ButtonWrapper = styled.div`\n  margin-top: 6.4rem;\n`;\n\nfunction displayJobDetail(jobsDetailData: [JobDetailType]) {\n  return jobsDetailData.map((jobDetail: JobDetailType, index: number) => {\n    switch (jobDetail.depth) {\n      case 1:\n        return (\n          <React.Fragment key={`${jobDetail.title.replace('\\n', '')}_${index}`}>\n            <Heading1>{jobDetail.title}</Heading1>\n            <Body1>{jobDetail.content}</Body1>\n          </React.Fragment>\n        );\n      case 2:\n        return (\n          <React.Fragment key={`${jobDetail.title.replace('\\n', '')}_${index}`}>\n            <Heading2>{jobDetail.title}</Heading2>\n            <Body3>{jobDetail.content}</Body3>\n          </React.Fragment>\n        );\n      case 3:\n        return (\n          <React.Fragment key={`${jobDetail.title.replace('\\n', '')}_${index}`}>\n            <Heading3>{jobDetail.title}</Heading3>\n            <Body3>{jobDetail.content}</Body3>\n          </React.Fragment>\n        );\n      case 4:\n        return (\n          <DiscList key={`${jobDetail.title.replace('\\n', '')}_${index}`}>\n            <Heading4>{jobDetail.title}</Heading4>\n            <CircleList>\n              <Body3 as=\"li\">{jobDetail.content}</Body3>\n            </CircleList>\n          </DiscList>\n        );\n      default:\n    }\n  });\n}\n\nfunction displayJobDetailSkeleton() {\n  return (\n    <>\n      <Heading1 style={{ width: '100%' }}>\n        <Skeleton />\n      </Heading1>\n      <Body1 style={{ width: '100%' }}>\n        <Skeleton />\n      </Body1>\n    </>\n  );\n}\n\nconst emptyJobsData = {\n  docId: '',\n  headingId: '',\n  content: '',\n  title: '',\n  depth: 0,\n};\n\nexport default function Job({ location }: Props) {\n  const urlParams = new URLSearchParams(location.search);\n  const [jobsData, setJobsData] = useState<[JobDetailType]>([emptyJobsData]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (location.state) {\n      getJobDetail(location.state.details, signal)\n        .then((resultData) => {\n          setJobsData(resultData);\n        })\n        .catch(() => setJobsData([emptyJobsData]));\n    } else if (urlParams.get('id')) {\n      getAllJobs(signal)\n        .then((resultData: JobItemDataType[]) => {\n          if (resultData) {\n            return resultData.find((data) => data.id === urlParams.get('id'))\n              ?.details;\n          }\n        })\n        .then((key: string = '') => {\n          getJobDetail(key, signal).then((resultData) => {\n            setJobsData(resultData);\n          });\n        })\n        .catch(() => setJobsData([emptyJobsData]));\n    }\n    return function cleanup() {\n      abortController.abort();\n      setJobsData([emptyJobsData]);\n    };\n  }, []);\n\n  return (\n    <>\n      <HelmetComponent\n        pageTitle={`${\n          jobsData[0].depth != 0 ? jobsData[0].title.replace('\\n', '') : ''\n        } 채용 - Careers`}\n        pageLink={`/career/job/?id=${urlParams.get('id')}`}\n      />\n      <Header>Careers</Header>\n      <ContainerStyled\n        data-sal=\"slide-up\"\n        data-sal-duration=\"1000\"\n        data-sal-easing=\"ease\"\n      >\n        {jobsData[0].depth != 0\n          ? displayJobDetail(jobsData)\n          : displayJobDetailSkeleton()}\n        <ButtonWrapper>\n          <Button href=\"mailto:jobs@iportfolio.co.kr\">지원하기</Button>\n        </ButtonWrapper>\n      </ContainerStyled>\n      <Footer />\n    </>\n  );\n}\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["getAllJobs","signal","fetch","then","response","json","catch","error","name","console","log","getJobDetail","details","HeaderContainer","styled","colors","responsive","Title","Typography","children","mode","ContainerStyled","Container","Heading1","Body1","Heading2","Heading3","Heading4","Body3","DiscList","CircleList","ButtonWrapper","emptyJobsData","docId","headingId","content","title","depth","Job","location","urlParams","URLSearchParams","search","useState","jobsData","setJobsData","useEffect","abortController","AbortController","state","resultData","get","find","data","id","key","abort","pageTitle","replace","pageLink","map","jobDetail","index","as","style","width","href"],"sourceRoot":""}